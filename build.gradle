plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.11.2"
}

repositories {
    mavenCentral()
}

def allureVersion = "2.27.0",
    selenideVersion = "7.2.3",
    junitJupiterVersion = "5.10.2",
    ownerVersion = "1.0.4",
    slf4jVersion = "2.0.7"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "org.junit.jupiter:junit-jupiter:$junitJupiterVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.aeonbits.owner:owner:$ownerVersion"
    )
}


tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

test {
    useJUnitPlatform()
}
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task wildberriesTests(type: Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform {
        includeTags("wildberriesTests")
    }
}
